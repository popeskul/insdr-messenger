name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: insdr
          POSTGRES_PASSWORD: password
          POSTGRES_DB: insdr_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
    
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Install dependencies
      run: |
        go mod download
        go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest
        go install github.com/oapi-codegen/oapi-codegen/v2/cmd/oapi-codegen@latest
    
    - name: Generate API code
      run: |
        oapi-codegen -package api -generate types,chi-server -o internal/api/openapi.gen.go api/openapi.yaml
    
    # Run linter with proper configuration
    - name: Run linter
      uses: golangci/golangci-lint-action@v6
      with:
        version: latest
        args: --config=.golangci.yml --timeout=5m
    
    - name: Run migrations up
      run: |
        migrate -path migrations -database "postgres://insdr:password@localhost:5432/insdr_db?sslmode=disable" up
    
    - name: Check migration status
      run: |
        migrate -path migrations -database "postgres://insdr:password@localhost:5432/insdr_db?sslmode=disable" version
    
    - name: Run tests
      run: go test -v ./...
      env:
        DATABASE_URL: postgres://insdr:password@localhost:5432/insdr_db?sslmode=disable
        REDIS_URL: redis://localhost:6379
    
    # Test migration rollback
    - name: Test migration down
      run: |
        migrate -path migrations -database "postgres://insdr:password@localhost:5432/insdr_db?sslmode=disable" down -all
        migrate -path migrations -database "postgres://insdr:password@localhost:5432/insdr_db?sslmode=disable" up

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: insdr-messenger:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max